
byggern43_node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000058  00800200  00000b98  00000c2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b98  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800258  00800258  00000c84  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c84  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ce0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000d20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000016be  00000000  00000000  00000e28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001016  00000000  00000000  000024e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000129f  00000000  00000000  000034fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f4  00000000  00000000  0000479c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000146a5  00000000  00000000  00004990  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000467  00000000  00000000  00019035  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  0001949c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00004407  00000000  00000000  00019554  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	01 c1       	rjmp	.+514    	; 0x208 <__vector_1>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 e9       	ldi	r30, 0x98	; 152
  fc:	fb e0       	ldi	r31, 0x0B	; 11
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 35       	cpi	r26, 0x58	; 88
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a8 e5       	ldi	r26, 0x58	; 88
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a4 36       	cpi	r26, 0x64	; 100
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	bf d0       	rcall	.+382    	; 0x29e <main>
 120:	39 c5       	rjmp	.+2674   	; 0xb94 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <can_init>:
	{
		mcp_write(MCP_TXB0D0+i,data->data[i]);
	}
	
	mcp_request_to_send(0); //1
}
 124:	7b d0       	rcall	.+246    	; 0x21c <spi_init>
 126:	57 d0       	rcall	.+174    	; 0x1d6 <mcp_reset>
 128:	40 e8       	ldi	r20, 0x80	; 128
 12a:	6f ef       	ldi	r22, 0xFF	; 255
 12c:	8f e0       	ldi	r24, 0x0F	; 15
 12e:	58 d0       	rcall	.+176    	; 0x1e0 <mcp_modify_bit>
 130:	4f ef       	ldi	r20, 0xFF	; 255
 132:	60 e6       	ldi	r22, 0x60	; 96
 134:	80 e6       	ldi	r24, 0x60	; 96
 136:	54 d0       	rcall	.+168    	; 0x1e0 <mcp_modify_bit>
 138:	41 e0       	ldi	r20, 0x01	; 1
 13a:	61 e0       	ldi	r22, 0x01	; 1
 13c:	8b e2       	ldi	r24, 0x2B	; 43
 13e:	50 d0       	rcall	.+160    	; 0x1e0 <mcp_modify_bit>
 140:	40 e0       	ldi	r20, 0x00	; 0
 142:	60 ee       	ldi	r22, 0xE0	; 224
 144:	8f e0       	ldi	r24, 0x0F	; 15
 146:	4c c0       	rjmp	.+152    	; 0x1e0 <mcp_modify_bit>
 148:	08 95       	ret

0000014a <can_recieve_msg>:

void can_recieve_msg(can_data_t* data){
 14a:	0f 93       	push	r16
 14c:	1f 93       	push	r17
 14e:	cf 93       	push	r28
 150:	8c 01       	movw	r16, r24
	
	if (mcp_read(MCP_CANINTF) & 0x01){
 152:	8c e2       	ldi	r24, 0x2C	; 44
 154:	33 d0       	rcall	.+102    	; 0x1bc <mcp_read>
 156:	80 ff       	sbrs	r24, 0
 158:	2d c0       	rjmp	.+90     	; 0x1b4 <can_recieve_msg+0x6a>
		printf("VALID MESSAGE \n\r");
 15a:	86 e0       	ldi	r24, 0x06	; 6
 15c:	92 e0       	ldi	r25, 0x02	; 2
 15e:	9f 93       	push	r25
 160:	8f 93       	push	r24
 162:	16 d1       	rcall	.+556    	; 0x390 <printf>
		uint8_t idhigh = mcp_read(MCP_RXB0SIDH);
 164:	81 e6       	ldi	r24, 0x61	; 97
 166:	2a d0       	rcall	.+84     	; 0x1bc <mcp_read>
 168:	c8 2f       	mov	r28, r24
		uint8_t idlow = mcp_read(MCP_RXB0SIDL);
 16a:	82 e6       	ldi	r24, 0x62	; 98
 16c:	27 d0       	rcall	.+78     	; 0x1bc <mcp_read>
 16e:	cc 0f       	add	r28, r28
		data->id = (idhigh << 3)|(idlow >> 5);
 170:	cc 0f       	add	r28, r28
 172:	cc 0f       	add	r28, r28
 174:	82 95       	swap	r24
 176:	86 95       	lsr	r24
 178:	87 70       	andi	r24, 0x07	; 7
 17a:	8c 2b       	or	r24, r28
 17c:	f8 01       	movw	r30, r16
 17e:	80 83       	st	Z, r24
		
		data->length = mcp_read(MCP_RXB0DLC) & 0x0f;
 180:	85 e6       	ldi	r24, 0x65	; 101
 182:	1c d0       	rcall	.+56     	; 0x1bc <mcp_read>
 184:	8f 70       	andi	r24, 0x0F	; 15
 186:	f8 01       	movw	r30, r16
 188:	81 83       	std	Z+1, r24	; 0x01
 18a:	0f 90       	pop	r0
		
		for (uint8_t i = 0; i < data->length; i++)
 18c:	0f 90       	pop	r0
 18e:	88 23       	and	r24, r24
 190:	69 f0       	breq	.+26     	; 0x1ac <can_recieve_msg+0x62>
 192:	c0 e0       	ldi	r28, 0x00	; 0
		{
			data->data[i] = mcp_read(MCP_RXB0D0+i);
 194:	86 e6       	ldi	r24, 0x66	; 102
 196:	8c 0f       	add	r24, r28
 198:	11 d0       	rcall	.+34     	; 0x1bc <mcp_read>
 19a:	f8 01       	movw	r30, r16
 19c:	ec 0f       	add	r30, r28
 19e:	f1 1d       	adc	r31, r1
 1a0:	82 83       	std	Z+2, r24	; 0x02
 1a2:	cf 5f       	subi	r28, 0xFF	; 255
		uint8_t idlow = mcp_read(MCP_RXB0SIDL);
		data->id = (idhigh << 3)|(idlow >> 5);
		
		data->length = mcp_read(MCP_RXB0DLC) & 0x0f;
		
		for (uint8_t i = 0; i < data->length; i++)
 1a4:	f8 01       	movw	r30, r16
 1a6:	81 81       	ldd	r24, Z+1	; 0x01
 1a8:	c8 17       	cp	r28, r24
 1aa:	a0 f3       	brcs	.-24     	; 0x194 <can_recieve_msg+0x4a>
		{
			data->data[i] = mcp_read(MCP_RXB0D0+i);
		}
		mcp_modify_bit(MCP_CANINTF, 0b01, 0);
 1ac:	40 e0       	ldi	r20, 0x00	; 0
 1ae:	61 e0       	ldi	r22, 0x01	; 1
 1b0:	8c e2       	ldi	r24, 0x2C	; 44
 1b2:	16 d0       	rcall	.+44     	; 0x1e0 <mcp_modify_bit>
 1b4:	cf 91       	pop	r28
	}
 1b6:	1f 91       	pop	r17
 1b8:	0f 91       	pop	r16
 1ba:	08 95       	ret

000001bc <mcp_read>:
 1bc:	cf 93       	push	r28

void mcp_request_to_send(uint8_t buffer){
	slave_enable();
	spi_write(0x80 | (1<< buffer));
	slave_deselect();
}
 1be:	c8 2f       	mov	r28, r24
 1c0:	41 d0       	rcall	.+130    	; 0x244 <slave_enable>
 1c2:	83 e0       	ldi	r24, 0x03	; 3
 1c4:	33 d0       	rcall	.+102    	; 0x22c <spi_write>
 1c6:	8c 2f       	mov	r24, r28
 1c8:	31 d0       	rcall	.+98     	; 0x22c <spi_write>
 1ca:	35 d0       	rcall	.+106    	; 0x236 <spi_read>
 1cc:	c8 2f       	mov	r28, r24
 1ce:	3c d0       	rcall	.+120    	; 0x248 <slave_deselect>
 1d0:	8c 2f       	mov	r24, r28
 1d2:	cf 91       	pop	r28
 1d4:	08 95       	ret

000001d6 <mcp_reset>:
 1d6:	36 d0       	rcall	.+108    	; 0x244 <slave_enable>
 1d8:	80 ec       	ldi	r24, 0xC0	; 192
 1da:	28 d0       	rcall	.+80     	; 0x22c <spi_write>
 1dc:	35 c0       	rjmp	.+106    	; 0x248 <slave_deselect>
 1de:	08 95       	ret

000001e0 <mcp_modify_bit>:
 1e0:	1f 93       	push	r17
 1e2:	cf 93       	push	r28
 1e4:	df 93       	push	r29
 1e6:	18 2f       	mov	r17, r24
 1e8:	d6 2f       	mov	r29, r22
 1ea:	c4 2f       	mov	r28, r20
 1ec:	2b d0       	rcall	.+86     	; 0x244 <slave_enable>
 1ee:	85 e0       	ldi	r24, 0x05	; 5
 1f0:	1d d0       	rcall	.+58     	; 0x22c <spi_write>
 1f2:	81 2f       	mov	r24, r17
 1f4:	1b d0       	rcall	.+54     	; 0x22c <spi_write>
 1f6:	8d 2f       	mov	r24, r29
 1f8:	19 d0       	rcall	.+50     	; 0x22c <spi_write>
 1fa:	8c 2f       	mov	r24, r28
 1fc:	17 d0       	rcall	.+46     	; 0x22c <spi_write>
 1fe:	24 d0       	rcall	.+72     	; 0x248 <slave_deselect>
 200:	df 91       	pop	r29
 202:	cf 91       	pop	r28
 204:	1f 91       	pop	r17
 206:	08 95       	ret

00000208 <__vector_1>:



ISR(INT0_vect){
 208:	1f 92       	push	r1
 20a:	0f 92       	push	r0
 20c:	0f b6       	in	r0, 0x3f	; 63
 20e:	0f 92       	push	r0
 210:	11 24       	eor	r1, r1
}
 212:	0f 90       	pop	r0
 214:	0f be       	out	0x3f, r0	; 63
 216:	0f 90       	pop	r0
 218:	1f 90       	pop	r1
 21a:	18 95       	reti

0000021c <spi_init>:
#include <avr/io.h>
#include <stdio.h>
#include "spi.h"

void spi_init(void){
	DDRB |= (1 << PINB0)|(1 << PINB7)|(1 << PINB2)|(1 << PINB1); // setting ss, mosi and sck as output
 21c:	84 b1       	in	r24, 0x04	; 4
 21e:	87 68       	ori	r24, 0x87	; 135
 220:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PINB3);	// setting miso as input
 222:	23 98       	cbi	0x04, 3	; 4
	SPCR |= (1<<SPE)|(1<<MSTR)|(1 << SPR0); // enable SPI and selectiong master mode
 224:	8c b5       	in	r24, 0x2c	; 44
 226:	81 65       	ori	r24, 0x51	; 81
 228:	8c bd       	out	0x2c, r24	; 44
 22a:	08 95       	ret

0000022c <spi_write>:
}
	
void spi_write(uint8_t data){
	SPDR = data;
 22c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
 22e:	0d b4       	in	r0, 0x2d	; 45
 230:	07 fe       	sbrs	r0, 7
 232:	fd cf       	rjmp	.-6      	; 0x22e <spi_write+0x2>
}
 234:	08 95       	ret

00000236 <spi_read>:

uint8_t spi_read(void){
	SPDR = 0xaa;
 236:	8a ea       	ldi	r24, 0xAA	; 170
 238:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
 23a:	0d b4       	in	r0, 0x2d	; 45
 23c:	07 fe       	sbrs	r0, 7
 23e:	fd cf       	rjmp	.-6      	; 0x23a <spi_read+0x4>
	return SPDR;
 240:	8e b5       	in	r24, 0x2e	; 46
}
 242:	08 95       	ret

00000244 <slave_enable>:

void slave_enable(void){
	PORTB &= ~(1 << PINB7);
 244:	2f 98       	cbi	0x05, 7	; 5
 246:	08 95       	ret

00000248 <slave_deselect>:
}

void slave_deselect(void){
	PORTB |= (1 << PINB7);
 248:	2f 9a       	sbi	0x05, 7	; 5
 24a:	08 95       	ret

0000024c <USART_Transmit>:
// USART driver

// USART transmit
int USART_Transmit(char data, FILE *f){
	/*Wait for empty transmit buffer*/
	while(!(UCSR0A & (1<<UDRE0)));
 24c:	e0 ec       	ldi	r30, 0xC0	; 192
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	90 81       	ld	r25, Z
 252:	95 ff       	sbrs	r25, 5
 254:	fd cf       	rjmp	.-6      	; 0x250 <USART_Transmit+0x4>
	/* Put data into buffer, sends the data*/
	UDR0 = data;
 256:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	
	return 0;
}
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	08 95       	ret

00000260 <USART_Receive>:

int USART_Receive(FILE* f){
	/* Wait for data to be received*/
	while(!(UCSR0A & (1<<RXC0)));
 260:	e0 ec       	ldi	r30, 0xC0	; 192
 262:	f0 e0       	ldi	r31, 0x00	; 0
 264:	80 81       	ld	r24, Z
 266:	88 23       	and	r24, r24
 268:	ec f7       	brge	.-6      	; 0x264 <USART_Receive+0x4>
	/* Get and return received data from buffer*/
	return UDR0;
 26a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
}
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	08 95       	ret

00000272 <USART_init>:
// USART init
int USART_init(unsigned int ubrr){
	UBRR0H = (unsigned char)(ubrr >> 8);
 272:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char) ubrr;
 276:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	/*Enable receiver and transmitter and receive interrupt*/
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<< RXCIE0);
 27a:	88 e9       	ldi	r24, 0x98	; 152
 27c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	/*Set frame format: 8data, 2 stop bit*/
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
 280:	8e e0       	ldi	r24, 0x0E	; 14
 282:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
	
	usart = fdevopen(&USART_Transmit, &USART_Receive);
 286:	60 e3       	ldi	r22, 0x30	; 48
 288:	71 e0       	ldi	r23, 0x01	; 1
 28a:	86 e2       	ldi	r24, 0x26	; 38
 28c:	91 e0       	ldi	r25, 0x01	; 1
 28e:	36 d0       	rcall	.+108    	; 0x2fc <fdevopen>
 290:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <__data_end+0x1>
 294:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <__data_end>
	
	return 0;
}
 298:	80 e0       	ldi	r24, 0x00	; 0
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	08 95       	ret

0000029e <main>:
#include <util/delay.h>
#include <avr/io.h>
#include <avr/interrupt.h>

int main (void)
{
 29e:	cf 93       	push	r28
 2a0:	df 93       	push	r29
 2a2:	cd b7       	in	r28, 0x3d	; 61
 2a4:	de b7       	in	r29, 0x3e	; 62
 2a6:	2a 97       	sbiw	r28, 0x0a	; 10
 2a8:	0f b6       	in	r0, 0x3f	; 63
 2aa:	f8 94       	cli
 2ac:	de bf       	out	0x3e, r29	; 62
 2ae:	0f be       	out	0x3f, r0	; 63
 2b0:	cd bf       	out	0x3d, r28	; 61
	USART_init(MYUBRR);
 2b2:	87 e6       	ldi	r24, 0x67	; 103
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	dd df       	rcall	.-70     	; 0x272 <USART_init>
	sei();
	can_init();
 2b8:	78 94       	sei
 2ba:	34 df       	rcall	.-408    	; 0x124 <can_init>
	can_data_t data;
	printf("\n\n\n\n\n begin!!! \n\r");
 2bc:	87 e1       	ldi	r24, 0x17	; 23
 2be:	92 e0       	ldi	r25, 0x02	; 2
 2c0:	9f 93       	push	r25
 2c2:	8f 93       	push	r24
 2c4:	65 d0       	rcall	.+202    	; 0x390 <printf>
 2c6:	0f 90       	pop	r0
 2c8:	0f 90       	pop	r0
	while (1)
	{
		can_recieve_msg(&data);
		if (data.id != 0)
		{
			printf("\n\rID = %u, leftslider: %u, rightslider: %u \n\r",data.id, data.data[0], data.data[1]);
 2ca:	09 e2       	ldi	r16, 0x29	; 41
	can_init();
	can_data_t data;
	printf("\n\n\n\n\n begin!!! \n\r");
	while (1)
	{
		can_recieve_msg(&data);
 2cc:	12 e0       	ldi	r17, 0x02	; 2
 2ce:	ce 01       	movw	r24, r28
 2d0:	01 96       	adiw	r24, 0x01	; 1
 2d2:	3b df       	rcall	.-394    	; 0x14a <can_recieve_msg>
		if (data.id != 0)
 2d4:	89 81       	ldd	r24, Y+1	; 0x01
 2d6:	88 23       	and	r24, r24
 2d8:	d1 f3       	breq	.-12     	; 0x2ce <main+0x30>
		{
			printf("\n\rID = %u, leftslider: %u, rightslider: %u \n\r",data.id, data.data[0], data.data[1]);
 2da:	9c 81       	ldd	r25, Y+4	; 0x04
 2dc:	1f 92       	push	r1
 2de:	9f 93       	push	r25
 2e0:	9b 81       	ldd	r25, Y+3	; 0x03
 2e2:	1f 92       	push	r1
 2e4:	9f 93       	push	r25
 2e6:	1f 92       	push	r1
 2e8:	8f 93       	push	r24
 2ea:	1f 93       	push	r17
 2ec:	0f 93       	push	r16
 2ee:	50 d0       	rcall	.+160    	; 0x390 <printf>
 2f0:	0f b6       	in	r0, 0x3f	; 63
 2f2:	f8 94       	cli
 2f4:	de bf       	out	0x3e, r29	; 62
 2f6:	0f be       	out	0x3f, r0	; 63
 2f8:	cd bf       	out	0x3d, r28	; 61
 2fa:	e9 cf       	rjmp	.-46     	; 0x2ce <main+0x30>

000002fc <fdevopen>:
 2fc:	0f 93       	push	r16
 2fe:	1f 93       	push	r17
 300:	cf 93       	push	r28
 302:	df 93       	push	r29
 304:	00 97       	sbiw	r24, 0x00	; 0
 306:	31 f4       	brne	.+12     	; 0x314 <fdevopen+0x18>
 308:	61 15       	cp	r22, r1
 30a:	71 05       	cpc	r23, r1
 30c:	19 f4       	brne	.+6      	; 0x314 <fdevopen+0x18>
 30e:	80 e0       	ldi	r24, 0x00	; 0
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	39 c0       	rjmp	.+114    	; 0x386 <fdevopen+0x8a>
 314:	8b 01       	movw	r16, r22
 316:	ec 01       	movw	r28, r24
 318:	6e e0       	ldi	r22, 0x0E	; 14
 31a:	70 e0       	ldi	r23, 0x00	; 0
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	47 d2       	rcall	.+1166   	; 0x7b0 <calloc>
 322:	fc 01       	movw	r30, r24
 324:	89 2b       	or	r24, r25
 326:	99 f3       	breq	.-26     	; 0x30e <fdevopen+0x12>
 328:	80 e8       	ldi	r24, 0x80	; 128
 32a:	83 83       	std	Z+3, r24	; 0x03
 32c:	01 15       	cp	r16, r1
 32e:	11 05       	cpc	r17, r1
 330:	71 f0       	breq	.+28     	; 0x34e <fdevopen+0x52>
 332:	13 87       	std	Z+11, r17	; 0x0b
 334:	02 87       	std	Z+10, r16	; 0x0a
 336:	81 e8       	ldi	r24, 0x81	; 129
 338:	83 83       	std	Z+3, r24	; 0x03
 33a:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <__iob>
 33e:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <__iob+0x1>
 342:	89 2b       	or	r24, r25
 344:	21 f4       	brne	.+8      	; 0x34e <fdevopen+0x52>
 346:	f0 93 5b 02 	sts	0x025B, r31	; 0x80025b <__iob+0x1>
 34a:	e0 93 5a 02 	sts	0x025A, r30	; 0x80025a <__iob>
 34e:	20 97       	sbiw	r28, 0x00	; 0
 350:	c9 f0       	breq	.+50     	; 0x384 <fdevopen+0x88>
 352:	d1 87       	std	Z+9, r29	; 0x09
 354:	c0 87       	std	Z+8, r28	; 0x08
 356:	83 81       	ldd	r24, Z+3	; 0x03
 358:	82 60       	ori	r24, 0x02	; 2
 35a:	83 83       	std	Z+3, r24	; 0x03
 35c:	80 91 5c 02 	lds	r24, 0x025C	; 0x80025c <__iob+0x2>
 360:	90 91 5d 02 	lds	r25, 0x025D	; 0x80025d <__iob+0x3>
 364:	89 2b       	or	r24, r25
 366:	71 f4       	brne	.+28     	; 0x384 <fdevopen+0x88>
 368:	f0 93 5d 02 	sts	0x025D, r31	; 0x80025d <__iob+0x3>
 36c:	e0 93 5c 02 	sts	0x025C, r30	; 0x80025c <__iob+0x2>
 370:	80 91 5e 02 	lds	r24, 0x025E	; 0x80025e <__iob+0x4>
 374:	90 91 5f 02 	lds	r25, 0x025F	; 0x80025f <__iob+0x5>
 378:	89 2b       	or	r24, r25
 37a:	21 f4       	brne	.+8      	; 0x384 <fdevopen+0x88>
 37c:	f0 93 5f 02 	sts	0x025F, r31	; 0x80025f <__iob+0x5>
 380:	e0 93 5e 02 	sts	0x025E, r30	; 0x80025e <__iob+0x4>
 384:	cf 01       	movw	r24, r30
 386:	df 91       	pop	r29
 388:	cf 91       	pop	r28
 38a:	1f 91       	pop	r17
 38c:	0f 91       	pop	r16
 38e:	08 95       	ret

00000390 <printf>:
 390:	cf 93       	push	r28
 392:	df 93       	push	r29
 394:	cd b7       	in	r28, 0x3d	; 61
 396:	de b7       	in	r29, 0x3e	; 62
 398:	ae 01       	movw	r20, r28
 39a:	4a 5f       	subi	r20, 0xFA	; 250
 39c:	5f 4f       	sbci	r21, 0xFF	; 255
 39e:	fa 01       	movw	r30, r20
 3a0:	61 91       	ld	r22, Z+
 3a2:	71 91       	ld	r23, Z+
 3a4:	af 01       	movw	r20, r30
 3a6:	80 91 5c 02 	lds	r24, 0x025C	; 0x80025c <__iob+0x2>
 3aa:	90 91 5d 02 	lds	r25, 0x025D	; 0x80025d <__iob+0x3>
 3ae:	03 d0       	rcall	.+6      	; 0x3b6 <vfprintf>
 3b0:	df 91       	pop	r29
 3b2:	cf 91       	pop	r28
 3b4:	08 95       	ret

000003b6 <vfprintf>:
 3b6:	2f 92       	push	r2
 3b8:	3f 92       	push	r3
 3ba:	4f 92       	push	r4
 3bc:	5f 92       	push	r5
 3be:	6f 92       	push	r6
 3c0:	7f 92       	push	r7
 3c2:	8f 92       	push	r8
 3c4:	9f 92       	push	r9
 3c6:	af 92       	push	r10
 3c8:	bf 92       	push	r11
 3ca:	cf 92       	push	r12
 3cc:	df 92       	push	r13
 3ce:	ef 92       	push	r14
 3d0:	ff 92       	push	r15
 3d2:	0f 93       	push	r16
 3d4:	1f 93       	push	r17
 3d6:	cf 93       	push	r28
 3d8:	df 93       	push	r29
 3da:	cd b7       	in	r28, 0x3d	; 61
 3dc:	de b7       	in	r29, 0x3e	; 62
 3de:	2b 97       	sbiw	r28, 0x0b	; 11
 3e0:	0f b6       	in	r0, 0x3f	; 63
 3e2:	f8 94       	cli
 3e4:	de bf       	out	0x3e, r29	; 62
 3e6:	0f be       	out	0x3f, r0	; 63
 3e8:	cd bf       	out	0x3d, r28	; 61
 3ea:	6c 01       	movw	r12, r24
 3ec:	7b 01       	movw	r14, r22
 3ee:	8a 01       	movw	r16, r20
 3f0:	fc 01       	movw	r30, r24
 3f2:	17 82       	std	Z+7, r1	; 0x07
 3f4:	16 82       	std	Z+6, r1	; 0x06
 3f6:	83 81       	ldd	r24, Z+3	; 0x03
 3f8:	81 ff       	sbrs	r24, 1
 3fa:	bf c1       	rjmp	.+894    	; 0x77a <__LOCK_REGION_LENGTH__+0x37a>
 3fc:	ce 01       	movw	r24, r28
 3fe:	01 96       	adiw	r24, 0x01	; 1
 400:	3c 01       	movw	r6, r24
 402:	f6 01       	movw	r30, r12
 404:	93 81       	ldd	r25, Z+3	; 0x03
 406:	f7 01       	movw	r30, r14
 408:	93 fd       	sbrc	r25, 3
 40a:	85 91       	lpm	r24, Z+
 40c:	93 ff       	sbrs	r25, 3
 40e:	81 91       	ld	r24, Z+
 410:	7f 01       	movw	r14, r30
 412:	88 23       	and	r24, r24
 414:	09 f4       	brne	.+2      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 416:	ad c1       	rjmp	.+858    	; 0x772 <__LOCK_REGION_LENGTH__+0x372>
 418:	85 32       	cpi	r24, 0x25	; 37
 41a:	39 f4       	brne	.+14     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41c:	93 fd       	sbrc	r25, 3
 41e:	85 91       	lpm	r24, Z+
 420:	93 ff       	sbrs	r25, 3
 422:	81 91       	ld	r24, Z+
 424:	7f 01       	movw	r14, r30
 426:	85 32       	cpi	r24, 0x25	; 37
 428:	21 f4       	brne	.+8      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 42a:	b6 01       	movw	r22, r12
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	18 d3       	rcall	.+1584   	; 0xa60 <fputc>
 430:	e8 cf       	rjmp	.-48     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 432:	91 2c       	mov	r9, r1
 434:	21 2c       	mov	r2, r1
 436:	31 2c       	mov	r3, r1
 438:	ff e1       	ldi	r31, 0x1F	; 31
 43a:	f3 15       	cp	r31, r3
 43c:	d8 f0       	brcs	.+54     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 43e:	8b 32       	cpi	r24, 0x2B	; 43
 440:	79 f0       	breq	.+30     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 442:	38 f4       	brcc	.+14     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 444:	80 32       	cpi	r24, 0x20	; 32
 446:	79 f0       	breq	.+30     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 448:	83 32       	cpi	r24, 0x23	; 35
 44a:	a1 f4       	brne	.+40     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 44c:	23 2d       	mov	r18, r3
 44e:	20 61       	ori	r18, 0x10	; 16
 450:	1d c0       	rjmp	.+58     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 452:	8d 32       	cpi	r24, 0x2D	; 45
 454:	61 f0       	breq	.+24     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 456:	80 33       	cpi	r24, 0x30	; 48
 458:	69 f4       	brne	.+26     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 45a:	23 2d       	mov	r18, r3
 45c:	21 60       	ori	r18, 0x01	; 1
 45e:	16 c0       	rjmp	.+44     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 460:	83 2d       	mov	r24, r3
 462:	82 60       	ori	r24, 0x02	; 2
 464:	38 2e       	mov	r3, r24
 466:	e3 2d       	mov	r30, r3
 468:	e4 60       	ori	r30, 0x04	; 4
 46a:	3e 2e       	mov	r3, r30
 46c:	2a c0       	rjmp	.+84     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 46e:	f3 2d       	mov	r31, r3
 470:	f8 60       	ori	r31, 0x08	; 8
 472:	1d c0       	rjmp	.+58     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 474:	37 fc       	sbrc	r3, 7
 476:	2d c0       	rjmp	.+90     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 478:	20 ed       	ldi	r18, 0xD0	; 208
 47a:	28 0f       	add	r18, r24
 47c:	2a 30       	cpi	r18, 0x0A	; 10
 47e:	40 f0       	brcs	.+16     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 480:	8e 32       	cpi	r24, 0x2E	; 46
 482:	b9 f4       	brne	.+46     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 484:	36 fc       	sbrc	r3, 6
 486:	75 c1       	rjmp	.+746    	; 0x772 <__LOCK_REGION_LENGTH__+0x372>
 488:	23 2d       	mov	r18, r3
 48a:	20 64       	ori	r18, 0x40	; 64
 48c:	32 2e       	mov	r3, r18
 48e:	19 c0       	rjmp	.+50     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 490:	36 fe       	sbrs	r3, 6
 492:	06 c0       	rjmp	.+12     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 494:	8a e0       	ldi	r24, 0x0A	; 10
 496:	98 9e       	mul	r9, r24
 498:	20 0d       	add	r18, r0
 49a:	11 24       	eor	r1, r1
 49c:	92 2e       	mov	r9, r18
 49e:	11 c0       	rjmp	.+34     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4a0:	ea e0       	ldi	r30, 0x0A	; 10
 4a2:	2e 9e       	mul	r2, r30
 4a4:	20 0d       	add	r18, r0
 4a6:	11 24       	eor	r1, r1
 4a8:	22 2e       	mov	r2, r18
 4aa:	f3 2d       	mov	r31, r3
 4ac:	f0 62       	ori	r31, 0x20	; 32
 4ae:	3f 2e       	mov	r3, r31
 4b0:	08 c0       	rjmp	.+16     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4b2:	8c 36       	cpi	r24, 0x6C	; 108
 4b4:	21 f4       	brne	.+8      	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4b6:	83 2d       	mov	r24, r3
 4b8:	80 68       	ori	r24, 0x80	; 128
 4ba:	38 2e       	mov	r3, r24
 4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4be:	88 36       	cpi	r24, 0x68	; 104
 4c0:	41 f4       	brne	.+16     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4c2:	f7 01       	movw	r30, r14
 4c4:	93 fd       	sbrc	r25, 3
 4c6:	85 91       	lpm	r24, Z+
 4c8:	93 ff       	sbrs	r25, 3
 4ca:	81 91       	ld	r24, Z+
 4cc:	7f 01       	movw	r14, r30
 4ce:	81 11       	cpse	r24, r1
 4d0:	b3 cf       	rjmp	.-154    	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 4d2:	98 2f       	mov	r25, r24
 4d4:	9f 7d       	andi	r25, 0xDF	; 223
 4d6:	95 54       	subi	r25, 0x45	; 69
 4d8:	93 30       	cpi	r25, 0x03	; 3
 4da:	28 f4       	brcc	.+10     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4dc:	0c 5f       	subi	r16, 0xFC	; 252
 4de:	1f 4f       	sbci	r17, 0xFF	; 255
 4e0:	9f e3       	ldi	r25, 0x3F	; 63
 4e2:	99 83       	std	Y+1, r25	; 0x01
 4e4:	0d c0       	rjmp	.+26     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4e6:	83 36       	cpi	r24, 0x63	; 99
 4e8:	31 f0       	breq	.+12     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4ea:	83 37       	cpi	r24, 0x73	; 115
 4ec:	71 f0       	breq	.+28     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4ee:	83 35       	cpi	r24, 0x53	; 83
 4f0:	09 f0       	breq	.+2      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4f2:	55 c0       	rjmp	.+170    	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 4f4:	20 c0       	rjmp	.+64     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 4f6:	f8 01       	movw	r30, r16
 4f8:	80 81       	ld	r24, Z
 4fa:	89 83       	std	Y+1, r24	; 0x01
 4fc:	0e 5f       	subi	r16, 0xFE	; 254
 4fe:	1f 4f       	sbci	r17, 0xFF	; 255
 500:	88 24       	eor	r8, r8
 502:	83 94       	inc	r8
 504:	91 2c       	mov	r9, r1
 506:	53 01       	movw	r10, r6
 508:	12 c0       	rjmp	.+36     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 50a:	28 01       	movw	r4, r16
 50c:	f2 e0       	ldi	r31, 0x02	; 2
 50e:	4f 0e       	add	r4, r31
 510:	51 1c       	adc	r5, r1
 512:	f8 01       	movw	r30, r16
 514:	a0 80       	ld	r10, Z
 516:	b1 80       	ldd	r11, Z+1	; 0x01
 518:	36 fe       	sbrs	r3, 6
 51a:	03 c0       	rjmp	.+6      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 51c:	69 2d       	mov	r22, r9
 51e:	70 e0       	ldi	r23, 0x00	; 0
 520:	02 c0       	rjmp	.+4      	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 522:	6f ef       	ldi	r22, 0xFF	; 255
 524:	7f ef       	ldi	r23, 0xFF	; 255
 526:	c5 01       	movw	r24, r10
 528:	90 d2       	rcall	.+1312   	; 0xa4a <strnlen>
 52a:	4c 01       	movw	r8, r24
 52c:	82 01       	movw	r16, r4
 52e:	f3 2d       	mov	r31, r3
 530:	ff 77       	andi	r31, 0x7F	; 127
 532:	3f 2e       	mov	r3, r31
 534:	15 c0       	rjmp	.+42     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 536:	28 01       	movw	r4, r16
 538:	22 e0       	ldi	r18, 0x02	; 2
 53a:	42 0e       	add	r4, r18
 53c:	51 1c       	adc	r5, r1
 53e:	f8 01       	movw	r30, r16
 540:	a0 80       	ld	r10, Z
 542:	b1 80       	ldd	r11, Z+1	; 0x01
 544:	36 fe       	sbrs	r3, 6
 546:	03 c0       	rjmp	.+6      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 548:	69 2d       	mov	r22, r9
 54a:	70 e0       	ldi	r23, 0x00	; 0
 54c:	02 c0       	rjmp	.+4      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 54e:	6f ef       	ldi	r22, 0xFF	; 255
 550:	7f ef       	ldi	r23, 0xFF	; 255
 552:	c5 01       	movw	r24, r10
 554:	68 d2       	rcall	.+1232   	; 0xa26 <strnlen_P>
 556:	4c 01       	movw	r8, r24
 558:	f3 2d       	mov	r31, r3
 55a:	f0 68       	ori	r31, 0x80	; 128
 55c:	3f 2e       	mov	r3, r31
 55e:	82 01       	movw	r16, r4
 560:	33 fc       	sbrc	r3, 3
 562:	19 c0       	rjmp	.+50     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 564:	82 2d       	mov	r24, r2
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	88 16       	cp	r8, r24
 56a:	99 06       	cpc	r9, r25
 56c:	a0 f4       	brcc	.+40     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 56e:	b6 01       	movw	r22, r12
 570:	80 e2       	ldi	r24, 0x20	; 32
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	75 d2       	rcall	.+1258   	; 0xa60 <fputc>
 576:	2a 94       	dec	r2
 578:	f5 cf       	rjmp	.-22     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 57a:	f5 01       	movw	r30, r10
 57c:	37 fc       	sbrc	r3, 7
 57e:	85 91       	lpm	r24, Z+
 580:	37 fe       	sbrs	r3, 7
 582:	81 91       	ld	r24, Z+
 584:	5f 01       	movw	r10, r30
 586:	b6 01       	movw	r22, r12
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	6a d2       	rcall	.+1236   	; 0xa60 <fputc>
 58c:	21 10       	cpse	r2, r1
 58e:	2a 94       	dec	r2
 590:	21 e0       	ldi	r18, 0x01	; 1
 592:	82 1a       	sub	r8, r18
 594:	91 08       	sbc	r9, r1
 596:	81 14       	cp	r8, r1
 598:	91 04       	cpc	r9, r1
 59a:	79 f7       	brne	.-34     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 59c:	e1 c0       	rjmp	.+450    	; 0x760 <__LOCK_REGION_LENGTH__+0x360>
 59e:	84 36       	cpi	r24, 0x64	; 100
 5a0:	11 f0       	breq	.+4      	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 5a2:	89 36       	cpi	r24, 0x69	; 105
 5a4:	39 f5       	brne	.+78     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5a6:	f8 01       	movw	r30, r16
 5a8:	37 fe       	sbrs	r3, 7
 5aa:	07 c0       	rjmp	.+14     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5ac:	60 81       	ld	r22, Z
 5ae:	71 81       	ldd	r23, Z+1	; 0x01
 5b0:	82 81       	ldd	r24, Z+2	; 0x02
 5b2:	93 81       	ldd	r25, Z+3	; 0x03
 5b4:	0c 5f       	subi	r16, 0xFC	; 252
 5b6:	1f 4f       	sbci	r17, 0xFF	; 255
 5b8:	08 c0       	rjmp	.+16     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5ba:	60 81       	ld	r22, Z
 5bc:	71 81       	ldd	r23, Z+1	; 0x01
 5be:	07 2e       	mov	r0, r23
 5c0:	00 0c       	add	r0, r0
 5c2:	88 0b       	sbc	r24, r24
 5c4:	99 0b       	sbc	r25, r25
 5c6:	0e 5f       	subi	r16, 0xFE	; 254
 5c8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ca:	f3 2d       	mov	r31, r3
 5cc:	ff 76       	andi	r31, 0x6F	; 111
 5ce:	3f 2e       	mov	r3, r31
 5d0:	97 ff       	sbrs	r25, 7
 5d2:	09 c0       	rjmp	.+18     	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5d4:	90 95       	com	r25
 5d6:	80 95       	com	r24
 5d8:	70 95       	com	r23
 5da:	61 95       	neg	r22
 5dc:	7f 4f       	sbci	r23, 0xFF	; 255
 5de:	8f 4f       	sbci	r24, 0xFF	; 255
 5e0:	9f 4f       	sbci	r25, 0xFF	; 255
 5e2:	f0 68       	ori	r31, 0x80	; 128
 5e4:	3f 2e       	mov	r3, r31
 5e6:	2a e0       	ldi	r18, 0x0A	; 10
 5e8:	30 e0       	ldi	r19, 0x00	; 0
 5ea:	a3 01       	movw	r20, r6
 5ec:	75 d2       	rcall	.+1258   	; 0xad8 <__ultoa_invert>
 5ee:	88 2e       	mov	r8, r24
 5f0:	86 18       	sub	r8, r6
 5f2:	44 c0       	rjmp	.+136    	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 5f4:	85 37       	cpi	r24, 0x75	; 117
 5f6:	31 f4       	brne	.+12     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5f8:	23 2d       	mov	r18, r3
 5fa:	2f 7e       	andi	r18, 0xEF	; 239
 5fc:	b2 2e       	mov	r11, r18
 5fe:	2a e0       	ldi	r18, 0x0A	; 10
 600:	30 e0       	ldi	r19, 0x00	; 0
 602:	25 c0       	rjmp	.+74     	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 604:	93 2d       	mov	r25, r3
 606:	99 7f       	andi	r25, 0xF9	; 249
 608:	b9 2e       	mov	r11, r25
 60a:	8f 36       	cpi	r24, 0x6F	; 111
 60c:	c1 f0       	breq	.+48     	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 60e:	18 f4       	brcc	.+6      	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 610:	88 35       	cpi	r24, 0x58	; 88
 612:	79 f0       	breq	.+30     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 614:	ae c0       	rjmp	.+348    	; 0x772 <__LOCK_REGION_LENGTH__+0x372>
 616:	80 37       	cpi	r24, 0x70	; 112
 618:	19 f0       	breq	.+6      	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 61a:	88 37       	cpi	r24, 0x78	; 120
 61c:	21 f0       	breq	.+8      	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 61e:	a9 c0       	rjmp	.+338    	; 0x772 <__LOCK_REGION_LENGTH__+0x372>
 620:	e9 2f       	mov	r30, r25
 622:	e0 61       	ori	r30, 0x10	; 16
 624:	be 2e       	mov	r11, r30
 626:	b4 fe       	sbrs	r11, 4
 628:	0d c0       	rjmp	.+26     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 62a:	fb 2d       	mov	r31, r11
 62c:	f4 60       	ori	r31, 0x04	; 4
 62e:	bf 2e       	mov	r11, r31
 630:	09 c0       	rjmp	.+18     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 632:	34 fe       	sbrs	r3, 4
 634:	0a c0       	rjmp	.+20     	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 636:	29 2f       	mov	r18, r25
 638:	26 60       	ori	r18, 0x06	; 6
 63a:	b2 2e       	mov	r11, r18
 63c:	06 c0       	rjmp	.+12     	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 63e:	28 e0       	ldi	r18, 0x08	; 8
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	05 c0       	rjmp	.+10     	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 644:	20 e1       	ldi	r18, 0x10	; 16
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	02 c0       	rjmp	.+4      	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 64a:	20 e1       	ldi	r18, 0x10	; 16
 64c:	32 e0       	ldi	r19, 0x02	; 2
 64e:	f8 01       	movw	r30, r16
 650:	b7 fe       	sbrs	r11, 7
 652:	07 c0       	rjmp	.+14     	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 654:	60 81       	ld	r22, Z
 656:	71 81       	ldd	r23, Z+1	; 0x01
 658:	82 81       	ldd	r24, Z+2	; 0x02
 65a:	93 81       	ldd	r25, Z+3	; 0x03
 65c:	0c 5f       	subi	r16, 0xFC	; 252
 65e:	1f 4f       	sbci	r17, 0xFF	; 255
 660:	06 c0       	rjmp	.+12     	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 662:	60 81       	ld	r22, Z
 664:	71 81       	ldd	r23, Z+1	; 0x01
 666:	80 e0       	ldi	r24, 0x00	; 0
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	0e 5f       	subi	r16, 0xFE	; 254
 66c:	1f 4f       	sbci	r17, 0xFF	; 255
 66e:	a3 01       	movw	r20, r6
 670:	33 d2       	rcall	.+1126   	; 0xad8 <__ultoa_invert>
 672:	88 2e       	mov	r8, r24
 674:	86 18       	sub	r8, r6
 676:	fb 2d       	mov	r31, r11
 678:	ff 77       	andi	r31, 0x7F	; 127
 67a:	3f 2e       	mov	r3, r31
 67c:	36 fe       	sbrs	r3, 6
 67e:	0d c0       	rjmp	.+26     	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
 680:	23 2d       	mov	r18, r3
 682:	2e 7f       	andi	r18, 0xFE	; 254
 684:	a2 2e       	mov	r10, r18
 686:	89 14       	cp	r8, r9
 688:	58 f4       	brcc	.+22     	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 68a:	34 fe       	sbrs	r3, 4
 68c:	0b c0       	rjmp	.+22     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 68e:	32 fc       	sbrc	r3, 2
 690:	09 c0       	rjmp	.+18     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 692:	83 2d       	mov	r24, r3
 694:	8e 7e       	andi	r24, 0xEE	; 238
 696:	a8 2e       	mov	r10, r24
 698:	05 c0       	rjmp	.+10     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 69a:	b8 2c       	mov	r11, r8
 69c:	a3 2c       	mov	r10, r3
 69e:	03 c0       	rjmp	.+6      	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 6a0:	b8 2c       	mov	r11, r8
 6a2:	01 c0       	rjmp	.+2      	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 6a4:	b9 2c       	mov	r11, r9
 6a6:	a4 fe       	sbrs	r10, 4
 6a8:	0f c0       	rjmp	.+30     	; 0x6c8 <__LOCK_REGION_LENGTH__+0x2c8>
 6aa:	fe 01       	movw	r30, r28
 6ac:	e8 0d       	add	r30, r8
 6ae:	f1 1d       	adc	r31, r1
 6b0:	80 81       	ld	r24, Z
 6b2:	80 33       	cpi	r24, 0x30	; 48
 6b4:	21 f4       	brne	.+8      	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 6b6:	9a 2d       	mov	r25, r10
 6b8:	99 7e       	andi	r25, 0xE9	; 233
 6ba:	a9 2e       	mov	r10, r25
 6bc:	09 c0       	rjmp	.+18     	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6be:	a2 fe       	sbrs	r10, 2
 6c0:	06 c0       	rjmp	.+12     	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6c2:	b3 94       	inc	r11
 6c4:	b3 94       	inc	r11
 6c6:	04 c0       	rjmp	.+8      	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6c8:	8a 2d       	mov	r24, r10
 6ca:	86 78       	andi	r24, 0x86	; 134
 6cc:	09 f0       	breq	.+2      	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6ce:	b3 94       	inc	r11
 6d0:	a3 fc       	sbrc	r10, 3
 6d2:	10 c0       	rjmp	.+32     	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 6d4:	a0 fe       	sbrs	r10, 0
 6d6:	06 c0       	rjmp	.+12     	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6d8:	b2 14       	cp	r11, r2
 6da:	80 f4       	brcc	.+32     	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
 6dc:	28 0c       	add	r2, r8
 6de:	92 2c       	mov	r9, r2
 6e0:	9b 18       	sub	r9, r11
 6e2:	0d c0       	rjmp	.+26     	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 6e4:	b2 14       	cp	r11, r2
 6e6:	58 f4       	brcc	.+22     	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 6e8:	b6 01       	movw	r22, r12
 6ea:	80 e2       	ldi	r24, 0x20	; 32
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	b8 d1       	rcall	.+880    	; 0xa60 <fputc>
 6f0:	b3 94       	inc	r11
 6f2:	f8 cf       	rjmp	.-16     	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6f4:	b2 14       	cp	r11, r2
 6f6:	18 f4       	brcc	.+6      	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 6f8:	2b 18       	sub	r2, r11
 6fa:	02 c0       	rjmp	.+4      	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
 6fc:	98 2c       	mov	r9, r8
 6fe:	21 2c       	mov	r2, r1
 700:	a4 fe       	sbrs	r10, 4
 702:	0f c0       	rjmp	.+30     	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
 704:	b6 01       	movw	r22, r12
 706:	80 e3       	ldi	r24, 0x30	; 48
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	aa d1       	rcall	.+852    	; 0xa60 <fputc>
 70c:	a2 fe       	sbrs	r10, 2
 70e:	16 c0       	rjmp	.+44     	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 710:	a1 fc       	sbrc	r10, 1
 712:	03 c0       	rjmp	.+6      	; 0x71a <__LOCK_REGION_LENGTH__+0x31a>
 714:	88 e7       	ldi	r24, 0x78	; 120
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	02 c0       	rjmp	.+4      	; 0x71e <__LOCK_REGION_LENGTH__+0x31e>
 71a:	88 e5       	ldi	r24, 0x58	; 88
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	b6 01       	movw	r22, r12
 720:	0c c0       	rjmp	.+24     	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
 722:	8a 2d       	mov	r24, r10
 724:	86 78       	andi	r24, 0x86	; 134
 726:	51 f0       	breq	.+20     	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 728:	a1 fe       	sbrs	r10, 1
 72a:	02 c0       	rjmp	.+4      	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
 72c:	8b e2       	ldi	r24, 0x2B	; 43
 72e:	01 c0       	rjmp	.+2      	; 0x732 <__LOCK_REGION_LENGTH__+0x332>
 730:	80 e2       	ldi	r24, 0x20	; 32
 732:	a7 fc       	sbrc	r10, 7
 734:	8d e2       	ldi	r24, 0x2D	; 45
 736:	b6 01       	movw	r22, r12
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	92 d1       	rcall	.+804    	; 0xa60 <fputc>
 73c:	89 14       	cp	r8, r9
 73e:	30 f4       	brcc	.+12     	; 0x74c <__LOCK_REGION_LENGTH__+0x34c>
 740:	b6 01       	movw	r22, r12
 742:	80 e3       	ldi	r24, 0x30	; 48
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	8c d1       	rcall	.+792    	; 0xa60 <fputc>
 748:	9a 94       	dec	r9
 74a:	f8 cf       	rjmp	.-16     	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 74c:	8a 94       	dec	r8
 74e:	f3 01       	movw	r30, r6
 750:	e8 0d       	add	r30, r8
 752:	f1 1d       	adc	r31, r1
 754:	80 81       	ld	r24, Z
 756:	b6 01       	movw	r22, r12
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	82 d1       	rcall	.+772    	; 0xa60 <fputc>
 75c:	81 10       	cpse	r8, r1
 75e:	f6 cf       	rjmp	.-20     	; 0x74c <__LOCK_REGION_LENGTH__+0x34c>
 760:	22 20       	and	r2, r2
 762:	09 f4       	brne	.+2      	; 0x766 <__LOCK_REGION_LENGTH__+0x366>
 764:	4e ce       	rjmp	.-868    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 766:	b6 01       	movw	r22, r12
 768:	80 e2       	ldi	r24, 0x20	; 32
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	79 d1       	rcall	.+754    	; 0xa60 <fputc>
 76e:	2a 94       	dec	r2
 770:	f7 cf       	rjmp	.-18     	; 0x760 <__LOCK_REGION_LENGTH__+0x360>
 772:	f6 01       	movw	r30, r12
 774:	86 81       	ldd	r24, Z+6	; 0x06
 776:	97 81       	ldd	r25, Z+7	; 0x07
 778:	02 c0       	rjmp	.+4      	; 0x77e <__LOCK_REGION_LENGTH__+0x37e>
 77a:	8f ef       	ldi	r24, 0xFF	; 255
 77c:	9f ef       	ldi	r25, 0xFF	; 255
 77e:	2b 96       	adiw	r28, 0x0b	; 11
 780:	0f b6       	in	r0, 0x3f	; 63
 782:	f8 94       	cli
 784:	de bf       	out	0x3e, r29	; 62
 786:	0f be       	out	0x3f, r0	; 63
 788:	cd bf       	out	0x3d, r28	; 61
 78a:	df 91       	pop	r29
 78c:	cf 91       	pop	r28
 78e:	1f 91       	pop	r17
 790:	0f 91       	pop	r16
 792:	ff 90       	pop	r15
 794:	ef 90       	pop	r14
 796:	df 90       	pop	r13
 798:	cf 90       	pop	r12
 79a:	bf 90       	pop	r11
 79c:	af 90       	pop	r10
 79e:	9f 90       	pop	r9
 7a0:	8f 90       	pop	r8
 7a2:	7f 90       	pop	r7
 7a4:	6f 90       	pop	r6
 7a6:	5f 90       	pop	r5
 7a8:	4f 90       	pop	r4
 7aa:	3f 90       	pop	r3
 7ac:	2f 90       	pop	r2
 7ae:	08 95       	ret

000007b0 <calloc>:
 7b0:	0f 93       	push	r16
 7b2:	1f 93       	push	r17
 7b4:	cf 93       	push	r28
 7b6:	df 93       	push	r29
 7b8:	86 9f       	mul	r24, r22
 7ba:	80 01       	movw	r16, r0
 7bc:	87 9f       	mul	r24, r23
 7be:	10 0d       	add	r17, r0
 7c0:	96 9f       	mul	r25, r22
 7c2:	10 0d       	add	r17, r0
 7c4:	11 24       	eor	r1, r1
 7c6:	c8 01       	movw	r24, r16
 7c8:	0d d0       	rcall	.+26     	; 0x7e4 <malloc>
 7ca:	ec 01       	movw	r28, r24
 7cc:	00 97       	sbiw	r24, 0x00	; 0
 7ce:	21 f0       	breq	.+8      	; 0x7d8 <calloc+0x28>
 7d0:	a8 01       	movw	r20, r16
 7d2:	60 e0       	ldi	r22, 0x00	; 0
 7d4:	70 e0       	ldi	r23, 0x00	; 0
 7d6:	32 d1       	rcall	.+612    	; 0xa3c <memset>
 7d8:	ce 01       	movw	r24, r28
 7da:	df 91       	pop	r29
 7dc:	cf 91       	pop	r28
 7de:	1f 91       	pop	r17
 7e0:	0f 91       	pop	r16
 7e2:	08 95       	ret

000007e4 <malloc>:
 7e4:	0f 93       	push	r16
 7e6:	1f 93       	push	r17
 7e8:	cf 93       	push	r28
 7ea:	df 93       	push	r29
 7ec:	82 30       	cpi	r24, 0x02	; 2
 7ee:	91 05       	cpc	r25, r1
 7f0:	10 f4       	brcc	.+4      	; 0x7f6 <malloc+0x12>
 7f2:	82 e0       	ldi	r24, 0x02	; 2
 7f4:	90 e0       	ldi	r25, 0x00	; 0
 7f6:	e0 91 62 02 	lds	r30, 0x0262	; 0x800262 <__flp>
 7fa:	f0 91 63 02 	lds	r31, 0x0263	; 0x800263 <__flp+0x1>
 7fe:	20 e0       	ldi	r18, 0x00	; 0
 800:	30 e0       	ldi	r19, 0x00	; 0
 802:	a0 e0       	ldi	r26, 0x00	; 0
 804:	b0 e0       	ldi	r27, 0x00	; 0
 806:	30 97       	sbiw	r30, 0x00	; 0
 808:	19 f1       	breq	.+70     	; 0x850 <malloc+0x6c>
 80a:	40 81       	ld	r20, Z
 80c:	51 81       	ldd	r21, Z+1	; 0x01
 80e:	02 81       	ldd	r16, Z+2	; 0x02
 810:	13 81       	ldd	r17, Z+3	; 0x03
 812:	48 17       	cp	r20, r24
 814:	59 07       	cpc	r21, r25
 816:	c8 f0       	brcs	.+50     	; 0x84a <malloc+0x66>
 818:	84 17       	cp	r24, r20
 81a:	95 07       	cpc	r25, r21
 81c:	69 f4       	brne	.+26     	; 0x838 <malloc+0x54>
 81e:	10 97       	sbiw	r26, 0x00	; 0
 820:	31 f0       	breq	.+12     	; 0x82e <malloc+0x4a>
 822:	12 96       	adiw	r26, 0x02	; 2
 824:	0c 93       	st	X, r16
 826:	12 97       	sbiw	r26, 0x02	; 2
 828:	13 96       	adiw	r26, 0x03	; 3
 82a:	1c 93       	st	X, r17
 82c:	27 c0       	rjmp	.+78     	; 0x87c <malloc+0x98>
 82e:	00 93 62 02 	sts	0x0262, r16	; 0x800262 <__flp>
 832:	10 93 63 02 	sts	0x0263, r17	; 0x800263 <__flp+0x1>
 836:	22 c0       	rjmp	.+68     	; 0x87c <malloc+0x98>
 838:	21 15       	cp	r18, r1
 83a:	31 05       	cpc	r19, r1
 83c:	19 f0       	breq	.+6      	; 0x844 <malloc+0x60>
 83e:	42 17       	cp	r20, r18
 840:	53 07       	cpc	r21, r19
 842:	18 f4       	brcc	.+6      	; 0x84a <malloc+0x66>
 844:	9a 01       	movw	r18, r20
 846:	bd 01       	movw	r22, r26
 848:	ef 01       	movw	r28, r30
 84a:	df 01       	movw	r26, r30
 84c:	f8 01       	movw	r30, r16
 84e:	db cf       	rjmp	.-74     	; 0x806 <malloc+0x22>
 850:	21 15       	cp	r18, r1
 852:	31 05       	cpc	r19, r1
 854:	f9 f0       	breq	.+62     	; 0x894 <malloc+0xb0>
 856:	28 1b       	sub	r18, r24
 858:	39 0b       	sbc	r19, r25
 85a:	24 30       	cpi	r18, 0x04	; 4
 85c:	31 05       	cpc	r19, r1
 85e:	80 f4       	brcc	.+32     	; 0x880 <malloc+0x9c>
 860:	8a 81       	ldd	r24, Y+2	; 0x02
 862:	9b 81       	ldd	r25, Y+3	; 0x03
 864:	61 15       	cp	r22, r1
 866:	71 05       	cpc	r23, r1
 868:	21 f0       	breq	.+8      	; 0x872 <malloc+0x8e>
 86a:	fb 01       	movw	r30, r22
 86c:	93 83       	std	Z+3, r25	; 0x03
 86e:	82 83       	std	Z+2, r24	; 0x02
 870:	04 c0       	rjmp	.+8      	; 0x87a <malloc+0x96>
 872:	90 93 63 02 	sts	0x0263, r25	; 0x800263 <__flp+0x1>
 876:	80 93 62 02 	sts	0x0262, r24	; 0x800262 <__flp>
 87a:	fe 01       	movw	r30, r28
 87c:	32 96       	adiw	r30, 0x02	; 2
 87e:	44 c0       	rjmp	.+136    	; 0x908 <malloc+0x124>
 880:	fe 01       	movw	r30, r28
 882:	e2 0f       	add	r30, r18
 884:	f3 1f       	adc	r31, r19
 886:	81 93       	st	Z+, r24
 888:	91 93       	st	Z+, r25
 88a:	22 50       	subi	r18, 0x02	; 2
 88c:	31 09       	sbc	r19, r1
 88e:	39 83       	std	Y+1, r19	; 0x01
 890:	28 83       	st	Y, r18
 892:	3a c0       	rjmp	.+116    	; 0x908 <malloc+0x124>
 894:	20 91 60 02 	lds	r18, 0x0260	; 0x800260 <__brkval>
 898:	30 91 61 02 	lds	r19, 0x0261	; 0x800261 <__brkval+0x1>
 89c:	23 2b       	or	r18, r19
 89e:	41 f4       	brne	.+16     	; 0x8b0 <malloc+0xcc>
 8a0:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
 8a4:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
 8a8:	30 93 61 02 	sts	0x0261, r19	; 0x800261 <__brkval+0x1>
 8ac:	20 93 60 02 	sts	0x0260, r18	; 0x800260 <__brkval>
 8b0:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
 8b4:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
 8b8:	21 15       	cp	r18, r1
 8ba:	31 05       	cpc	r19, r1
 8bc:	41 f4       	brne	.+16     	; 0x8ce <malloc+0xea>
 8be:	2d b7       	in	r18, 0x3d	; 61
 8c0:	3e b7       	in	r19, 0x3e	; 62
 8c2:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
 8c6:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
 8ca:	24 1b       	sub	r18, r20
 8cc:	35 0b       	sbc	r19, r21
 8ce:	e0 91 60 02 	lds	r30, 0x0260	; 0x800260 <__brkval>
 8d2:	f0 91 61 02 	lds	r31, 0x0261	; 0x800261 <__brkval+0x1>
 8d6:	e2 17       	cp	r30, r18
 8d8:	f3 07       	cpc	r31, r19
 8da:	a0 f4       	brcc	.+40     	; 0x904 <malloc+0x120>
 8dc:	2e 1b       	sub	r18, r30
 8de:	3f 0b       	sbc	r19, r31
 8e0:	28 17       	cp	r18, r24
 8e2:	39 07       	cpc	r19, r25
 8e4:	78 f0       	brcs	.+30     	; 0x904 <malloc+0x120>
 8e6:	ac 01       	movw	r20, r24
 8e8:	4e 5f       	subi	r20, 0xFE	; 254
 8ea:	5f 4f       	sbci	r21, 0xFF	; 255
 8ec:	24 17       	cp	r18, r20
 8ee:	35 07       	cpc	r19, r21
 8f0:	48 f0       	brcs	.+18     	; 0x904 <malloc+0x120>
 8f2:	4e 0f       	add	r20, r30
 8f4:	5f 1f       	adc	r21, r31
 8f6:	50 93 61 02 	sts	0x0261, r21	; 0x800261 <__brkval+0x1>
 8fa:	40 93 60 02 	sts	0x0260, r20	; 0x800260 <__brkval>
 8fe:	81 93       	st	Z+, r24
 900:	91 93       	st	Z+, r25
 902:	02 c0       	rjmp	.+4      	; 0x908 <malloc+0x124>
 904:	e0 e0       	ldi	r30, 0x00	; 0
 906:	f0 e0       	ldi	r31, 0x00	; 0
 908:	cf 01       	movw	r24, r30
 90a:	df 91       	pop	r29
 90c:	cf 91       	pop	r28
 90e:	1f 91       	pop	r17
 910:	0f 91       	pop	r16
 912:	08 95       	ret

00000914 <free>:
 914:	cf 93       	push	r28
 916:	df 93       	push	r29
 918:	00 97       	sbiw	r24, 0x00	; 0
 91a:	09 f4       	brne	.+2      	; 0x91e <free+0xa>
 91c:	81 c0       	rjmp	.+258    	; 0xa20 <free+0x10c>
 91e:	fc 01       	movw	r30, r24
 920:	32 97       	sbiw	r30, 0x02	; 2
 922:	13 82       	std	Z+3, r1	; 0x03
 924:	12 82       	std	Z+2, r1	; 0x02
 926:	a0 91 62 02 	lds	r26, 0x0262	; 0x800262 <__flp>
 92a:	b0 91 63 02 	lds	r27, 0x0263	; 0x800263 <__flp+0x1>
 92e:	10 97       	sbiw	r26, 0x00	; 0
 930:	81 f4       	brne	.+32     	; 0x952 <free+0x3e>
 932:	20 81       	ld	r18, Z
 934:	31 81       	ldd	r19, Z+1	; 0x01
 936:	82 0f       	add	r24, r18
 938:	93 1f       	adc	r25, r19
 93a:	20 91 60 02 	lds	r18, 0x0260	; 0x800260 <__brkval>
 93e:	30 91 61 02 	lds	r19, 0x0261	; 0x800261 <__brkval+0x1>
 942:	28 17       	cp	r18, r24
 944:	39 07       	cpc	r19, r25
 946:	51 f5       	brne	.+84     	; 0x99c <free+0x88>
 948:	f0 93 61 02 	sts	0x0261, r31	; 0x800261 <__brkval+0x1>
 94c:	e0 93 60 02 	sts	0x0260, r30	; 0x800260 <__brkval>
 950:	67 c0       	rjmp	.+206    	; 0xa20 <free+0x10c>
 952:	ed 01       	movw	r28, r26
 954:	20 e0       	ldi	r18, 0x00	; 0
 956:	30 e0       	ldi	r19, 0x00	; 0
 958:	ce 17       	cp	r28, r30
 95a:	df 07       	cpc	r29, r31
 95c:	40 f4       	brcc	.+16     	; 0x96e <free+0x5a>
 95e:	4a 81       	ldd	r20, Y+2	; 0x02
 960:	5b 81       	ldd	r21, Y+3	; 0x03
 962:	9e 01       	movw	r18, r28
 964:	41 15       	cp	r20, r1
 966:	51 05       	cpc	r21, r1
 968:	f1 f0       	breq	.+60     	; 0x9a6 <free+0x92>
 96a:	ea 01       	movw	r28, r20
 96c:	f5 cf       	rjmp	.-22     	; 0x958 <free+0x44>
 96e:	d3 83       	std	Z+3, r29	; 0x03
 970:	c2 83       	std	Z+2, r28	; 0x02
 972:	40 81       	ld	r20, Z
 974:	51 81       	ldd	r21, Z+1	; 0x01
 976:	84 0f       	add	r24, r20
 978:	95 1f       	adc	r25, r21
 97a:	c8 17       	cp	r28, r24
 97c:	d9 07       	cpc	r29, r25
 97e:	59 f4       	brne	.+22     	; 0x996 <free+0x82>
 980:	88 81       	ld	r24, Y
 982:	99 81       	ldd	r25, Y+1	; 0x01
 984:	84 0f       	add	r24, r20
 986:	95 1f       	adc	r25, r21
 988:	02 96       	adiw	r24, 0x02	; 2
 98a:	91 83       	std	Z+1, r25	; 0x01
 98c:	80 83       	st	Z, r24
 98e:	8a 81       	ldd	r24, Y+2	; 0x02
 990:	9b 81       	ldd	r25, Y+3	; 0x03
 992:	93 83       	std	Z+3, r25	; 0x03
 994:	82 83       	std	Z+2, r24	; 0x02
 996:	21 15       	cp	r18, r1
 998:	31 05       	cpc	r19, r1
 99a:	29 f4       	brne	.+10     	; 0x9a6 <free+0x92>
 99c:	f0 93 63 02 	sts	0x0263, r31	; 0x800263 <__flp+0x1>
 9a0:	e0 93 62 02 	sts	0x0262, r30	; 0x800262 <__flp>
 9a4:	3d c0       	rjmp	.+122    	; 0xa20 <free+0x10c>
 9a6:	e9 01       	movw	r28, r18
 9a8:	fb 83       	std	Y+3, r31	; 0x03
 9aa:	ea 83       	std	Y+2, r30	; 0x02
 9ac:	49 91       	ld	r20, Y+
 9ae:	59 91       	ld	r21, Y+
 9b0:	c4 0f       	add	r28, r20
 9b2:	d5 1f       	adc	r29, r21
 9b4:	ec 17       	cp	r30, r28
 9b6:	fd 07       	cpc	r31, r29
 9b8:	61 f4       	brne	.+24     	; 0x9d2 <free+0xbe>
 9ba:	80 81       	ld	r24, Z
 9bc:	91 81       	ldd	r25, Z+1	; 0x01
 9be:	84 0f       	add	r24, r20
 9c0:	95 1f       	adc	r25, r21
 9c2:	02 96       	adiw	r24, 0x02	; 2
 9c4:	e9 01       	movw	r28, r18
 9c6:	99 83       	std	Y+1, r25	; 0x01
 9c8:	88 83       	st	Y, r24
 9ca:	82 81       	ldd	r24, Z+2	; 0x02
 9cc:	93 81       	ldd	r25, Z+3	; 0x03
 9ce:	9b 83       	std	Y+3, r25	; 0x03
 9d0:	8a 83       	std	Y+2, r24	; 0x02
 9d2:	e0 e0       	ldi	r30, 0x00	; 0
 9d4:	f0 e0       	ldi	r31, 0x00	; 0
 9d6:	12 96       	adiw	r26, 0x02	; 2
 9d8:	8d 91       	ld	r24, X+
 9da:	9c 91       	ld	r25, X
 9dc:	13 97       	sbiw	r26, 0x03	; 3
 9de:	00 97       	sbiw	r24, 0x00	; 0
 9e0:	19 f0       	breq	.+6      	; 0x9e8 <free+0xd4>
 9e2:	fd 01       	movw	r30, r26
 9e4:	dc 01       	movw	r26, r24
 9e6:	f7 cf       	rjmp	.-18     	; 0x9d6 <free+0xc2>
 9e8:	8d 91       	ld	r24, X+
 9ea:	9c 91       	ld	r25, X
 9ec:	11 97       	sbiw	r26, 0x01	; 1
 9ee:	9d 01       	movw	r18, r26
 9f0:	2e 5f       	subi	r18, 0xFE	; 254
 9f2:	3f 4f       	sbci	r19, 0xFF	; 255
 9f4:	82 0f       	add	r24, r18
 9f6:	93 1f       	adc	r25, r19
 9f8:	20 91 60 02 	lds	r18, 0x0260	; 0x800260 <__brkval>
 9fc:	30 91 61 02 	lds	r19, 0x0261	; 0x800261 <__brkval+0x1>
 a00:	28 17       	cp	r18, r24
 a02:	39 07       	cpc	r19, r25
 a04:	69 f4       	brne	.+26     	; 0xa20 <free+0x10c>
 a06:	30 97       	sbiw	r30, 0x00	; 0
 a08:	29 f4       	brne	.+10     	; 0xa14 <free+0x100>
 a0a:	10 92 63 02 	sts	0x0263, r1	; 0x800263 <__flp+0x1>
 a0e:	10 92 62 02 	sts	0x0262, r1	; 0x800262 <__flp>
 a12:	02 c0       	rjmp	.+4      	; 0xa18 <free+0x104>
 a14:	13 82       	std	Z+3, r1	; 0x03
 a16:	12 82       	std	Z+2, r1	; 0x02
 a18:	b0 93 61 02 	sts	0x0261, r27	; 0x800261 <__brkval+0x1>
 a1c:	a0 93 60 02 	sts	0x0260, r26	; 0x800260 <__brkval>
 a20:	df 91       	pop	r29
 a22:	cf 91       	pop	r28
 a24:	08 95       	ret

00000a26 <strnlen_P>:
 a26:	fc 01       	movw	r30, r24
 a28:	05 90       	lpm	r0, Z+
 a2a:	61 50       	subi	r22, 0x01	; 1
 a2c:	70 40       	sbci	r23, 0x00	; 0
 a2e:	01 10       	cpse	r0, r1
 a30:	d8 f7       	brcc	.-10     	; 0xa28 <strnlen_P+0x2>
 a32:	80 95       	com	r24
 a34:	90 95       	com	r25
 a36:	8e 0f       	add	r24, r30
 a38:	9f 1f       	adc	r25, r31
 a3a:	08 95       	ret

00000a3c <memset>:
 a3c:	dc 01       	movw	r26, r24
 a3e:	01 c0       	rjmp	.+2      	; 0xa42 <memset+0x6>
 a40:	6d 93       	st	X+, r22
 a42:	41 50       	subi	r20, 0x01	; 1
 a44:	50 40       	sbci	r21, 0x00	; 0
 a46:	e0 f7       	brcc	.-8      	; 0xa40 <memset+0x4>
 a48:	08 95       	ret

00000a4a <strnlen>:
 a4a:	fc 01       	movw	r30, r24
 a4c:	61 50       	subi	r22, 0x01	; 1
 a4e:	70 40       	sbci	r23, 0x00	; 0
 a50:	01 90       	ld	r0, Z+
 a52:	01 10       	cpse	r0, r1
 a54:	d8 f7       	brcc	.-10     	; 0xa4c <strnlen+0x2>
 a56:	80 95       	com	r24
 a58:	90 95       	com	r25
 a5a:	8e 0f       	add	r24, r30
 a5c:	9f 1f       	adc	r25, r31
 a5e:	08 95       	ret

00000a60 <fputc>:
 a60:	0f 93       	push	r16
 a62:	1f 93       	push	r17
 a64:	cf 93       	push	r28
 a66:	df 93       	push	r29
 a68:	fb 01       	movw	r30, r22
 a6a:	23 81       	ldd	r18, Z+3	; 0x03
 a6c:	21 fd       	sbrc	r18, 1
 a6e:	03 c0       	rjmp	.+6      	; 0xa76 <fputc+0x16>
 a70:	8f ef       	ldi	r24, 0xFF	; 255
 a72:	9f ef       	ldi	r25, 0xFF	; 255
 a74:	2c c0       	rjmp	.+88     	; 0xace <fputc+0x6e>
 a76:	22 ff       	sbrs	r18, 2
 a78:	16 c0       	rjmp	.+44     	; 0xaa6 <fputc+0x46>
 a7a:	46 81       	ldd	r20, Z+6	; 0x06
 a7c:	57 81       	ldd	r21, Z+7	; 0x07
 a7e:	24 81       	ldd	r18, Z+4	; 0x04
 a80:	35 81       	ldd	r19, Z+5	; 0x05
 a82:	42 17       	cp	r20, r18
 a84:	53 07       	cpc	r21, r19
 a86:	44 f4       	brge	.+16     	; 0xa98 <fputc+0x38>
 a88:	a0 81       	ld	r26, Z
 a8a:	b1 81       	ldd	r27, Z+1	; 0x01
 a8c:	9d 01       	movw	r18, r26
 a8e:	2f 5f       	subi	r18, 0xFF	; 255
 a90:	3f 4f       	sbci	r19, 0xFF	; 255
 a92:	31 83       	std	Z+1, r19	; 0x01
 a94:	20 83       	st	Z, r18
 a96:	8c 93       	st	X, r24
 a98:	26 81       	ldd	r18, Z+6	; 0x06
 a9a:	37 81       	ldd	r19, Z+7	; 0x07
 a9c:	2f 5f       	subi	r18, 0xFF	; 255
 a9e:	3f 4f       	sbci	r19, 0xFF	; 255
 aa0:	37 83       	std	Z+7, r19	; 0x07
 aa2:	26 83       	std	Z+6, r18	; 0x06
 aa4:	14 c0       	rjmp	.+40     	; 0xace <fputc+0x6e>
 aa6:	8b 01       	movw	r16, r22
 aa8:	ec 01       	movw	r28, r24
 aaa:	fb 01       	movw	r30, r22
 aac:	00 84       	ldd	r0, Z+8	; 0x08
 aae:	f1 85       	ldd	r31, Z+9	; 0x09
 ab0:	e0 2d       	mov	r30, r0
 ab2:	19 95       	eicall
 ab4:	89 2b       	or	r24, r25
 ab6:	e1 f6       	brne	.-72     	; 0xa70 <fputc+0x10>
 ab8:	d8 01       	movw	r26, r16
 aba:	16 96       	adiw	r26, 0x06	; 6
 abc:	8d 91       	ld	r24, X+
 abe:	9c 91       	ld	r25, X
 ac0:	17 97       	sbiw	r26, 0x07	; 7
 ac2:	01 96       	adiw	r24, 0x01	; 1
 ac4:	17 96       	adiw	r26, 0x07	; 7
 ac6:	9c 93       	st	X, r25
 ac8:	8e 93       	st	-X, r24
 aca:	16 97       	sbiw	r26, 0x06	; 6
 acc:	ce 01       	movw	r24, r28
 ace:	df 91       	pop	r29
 ad0:	cf 91       	pop	r28
 ad2:	1f 91       	pop	r17
 ad4:	0f 91       	pop	r16
 ad6:	08 95       	ret

00000ad8 <__ultoa_invert>:
 ad8:	fa 01       	movw	r30, r20
 ada:	aa 27       	eor	r26, r26
 adc:	28 30       	cpi	r18, 0x08	; 8
 ade:	51 f1       	breq	.+84     	; 0xb34 <__ultoa_invert+0x5c>
 ae0:	20 31       	cpi	r18, 0x10	; 16
 ae2:	81 f1       	breq	.+96     	; 0xb44 <__ultoa_invert+0x6c>
 ae4:	e8 94       	clt
 ae6:	6f 93       	push	r22
 ae8:	6e 7f       	andi	r22, 0xFE	; 254
 aea:	6e 5f       	subi	r22, 0xFE	; 254
 aec:	7f 4f       	sbci	r23, 0xFF	; 255
 aee:	8f 4f       	sbci	r24, 0xFF	; 255
 af0:	9f 4f       	sbci	r25, 0xFF	; 255
 af2:	af 4f       	sbci	r26, 0xFF	; 255
 af4:	b1 e0       	ldi	r27, 0x01	; 1
 af6:	3e d0       	rcall	.+124    	; 0xb74 <__ultoa_invert+0x9c>
 af8:	b4 e0       	ldi	r27, 0x04	; 4
 afa:	3c d0       	rcall	.+120    	; 0xb74 <__ultoa_invert+0x9c>
 afc:	67 0f       	add	r22, r23
 afe:	78 1f       	adc	r23, r24
 b00:	89 1f       	adc	r24, r25
 b02:	9a 1f       	adc	r25, r26
 b04:	a1 1d       	adc	r26, r1
 b06:	68 0f       	add	r22, r24
 b08:	79 1f       	adc	r23, r25
 b0a:	8a 1f       	adc	r24, r26
 b0c:	91 1d       	adc	r25, r1
 b0e:	a1 1d       	adc	r26, r1
 b10:	6a 0f       	add	r22, r26
 b12:	71 1d       	adc	r23, r1
 b14:	81 1d       	adc	r24, r1
 b16:	91 1d       	adc	r25, r1
 b18:	a1 1d       	adc	r26, r1
 b1a:	20 d0       	rcall	.+64     	; 0xb5c <__ultoa_invert+0x84>
 b1c:	09 f4       	brne	.+2      	; 0xb20 <__ultoa_invert+0x48>
 b1e:	68 94       	set
 b20:	3f 91       	pop	r19
 b22:	2a e0       	ldi	r18, 0x0A	; 10
 b24:	26 9f       	mul	r18, r22
 b26:	11 24       	eor	r1, r1
 b28:	30 19       	sub	r19, r0
 b2a:	30 5d       	subi	r19, 0xD0	; 208
 b2c:	31 93       	st	Z+, r19
 b2e:	de f6       	brtc	.-74     	; 0xae6 <__ultoa_invert+0xe>
 b30:	cf 01       	movw	r24, r30
 b32:	08 95       	ret
 b34:	46 2f       	mov	r20, r22
 b36:	47 70       	andi	r20, 0x07	; 7
 b38:	40 5d       	subi	r20, 0xD0	; 208
 b3a:	41 93       	st	Z+, r20
 b3c:	b3 e0       	ldi	r27, 0x03	; 3
 b3e:	0f d0       	rcall	.+30     	; 0xb5e <__ultoa_invert+0x86>
 b40:	c9 f7       	brne	.-14     	; 0xb34 <__ultoa_invert+0x5c>
 b42:	f6 cf       	rjmp	.-20     	; 0xb30 <__ultoa_invert+0x58>
 b44:	46 2f       	mov	r20, r22
 b46:	4f 70       	andi	r20, 0x0F	; 15
 b48:	40 5d       	subi	r20, 0xD0	; 208
 b4a:	4a 33       	cpi	r20, 0x3A	; 58
 b4c:	18 f0       	brcs	.+6      	; 0xb54 <__ultoa_invert+0x7c>
 b4e:	49 5d       	subi	r20, 0xD9	; 217
 b50:	31 fd       	sbrc	r19, 1
 b52:	40 52       	subi	r20, 0x20	; 32
 b54:	41 93       	st	Z+, r20
 b56:	02 d0       	rcall	.+4      	; 0xb5c <__ultoa_invert+0x84>
 b58:	a9 f7       	brne	.-22     	; 0xb44 <__ultoa_invert+0x6c>
 b5a:	ea cf       	rjmp	.-44     	; 0xb30 <__ultoa_invert+0x58>
 b5c:	b4 e0       	ldi	r27, 0x04	; 4
 b5e:	a6 95       	lsr	r26
 b60:	97 95       	ror	r25
 b62:	87 95       	ror	r24
 b64:	77 95       	ror	r23
 b66:	67 95       	ror	r22
 b68:	ba 95       	dec	r27
 b6a:	c9 f7       	brne	.-14     	; 0xb5e <__ultoa_invert+0x86>
 b6c:	00 97       	sbiw	r24, 0x00	; 0
 b6e:	61 05       	cpc	r22, r1
 b70:	71 05       	cpc	r23, r1
 b72:	08 95       	ret
 b74:	9b 01       	movw	r18, r22
 b76:	ac 01       	movw	r20, r24
 b78:	0a 2e       	mov	r0, r26
 b7a:	06 94       	lsr	r0
 b7c:	57 95       	ror	r21
 b7e:	47 95       	ror	r20
 b80:	37 95       	ror	r19
 b82:	27 95       	ror	r18
 b84:	ba 95       	dec	r27
 b86:	c9 f7       	brne	.-14     	; 0xb7a <__ultoa_invert+0xa2>
 b88:	62 0f       	add	r22, r18
 b8a:	73 1f       	adc	r23, r19
 b8c:	84 1f       	adc	r24, r20
 b8e:	95 1f       	adc	r25, r21
 b90:	a0 1d       	adc	r26, r0
 b92:	08 95       	ret

00000b94 <_exit>:
 b94:	f8 94       	cli

00000b96 <__stop_program>:
 b96:	ff cf       	rjmp	.-2      	; 0xb96 <__stop_program>
